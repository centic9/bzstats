apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'

sourceCompatibility = JavaVersion.VERSION_11
version = '1.0'
mainClassName = "POIBugzillaStats"

jar {
    manifest {
        attributes 'Implementation-Title': 'Apache POI Bugzilla Statistics', 'Implementation-Version': archiveVersion
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.dstadler:commons-dost:1.3.0'

    implementation 'com.google.guava:guava:33.0.0-jre'
    implementation 'commons-io:commons-io:2.15.1'
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'org.apache.velocity:velocity:1.7'
}

wrapper {
    gradleVersion = '8.5'
}

test {
    systemProperties = System.properties as Map<String, ?>

	// show standard out and standard error of the test JVM(s) on the console
	testLogging.showStandardStreams = true
}

jacoco {
    toolVersion = '0.8.11'
}

/*task createZip(type: Zip) {
    from '.'
    excludes = ['bin', 'build', '.gradle', '20*', 'Moves.txt', 'Splits.json', '.classpath', '.svn']
}*/

task refreshStats(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath

	mainClass = mainClassName
}

task createChart(type: Exec) {
	final String osName = System.getProperty("os.name").toLowerCase()
	if(osName.contains("windows")) {
		executable 'C:/cygwin/bin/bash.exe'
		args '-c', '/bin/R --no-save -f chart.R'
	} else {
		executable 'R'
		args '--no-save', '-f', 'chart.R'
	}
}

createChart.mustRunAfter refreshStats

task refresh() {
   dependsOn classes, check, refreshStats, createChart
}
