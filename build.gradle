apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'jacoco'

//mainClassName = "org.dstadler.suunto.Harvester"

sourceCompatibility = 1.8
version = '1.0'
mainClassName = "POIBugzillaStats"

jar {
    manifest {
        attributes 'Implementation-Title': 'Apache POI Bugzilla Statistics', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.dstadler:commons-dost:1.0.0.+'

    compile 'com.google.guava:guava:18.0'
    compile 'commons-io:commons-io:2.4'
    compile 'org.apache.commons:commons-lang3:3.3.2'
    compile 'org.apache.velocity:velocity:1.7'  
	
	// to make Eclipse project link to it...
	compile 'junit:junit:4.+'
}

// work around unnecessary timestamp in generated file which always causes dirty files in version control
// https://issues.gradle.org/browse/GRADLE-2293
task adjustEclipseSettingsFile << {
   ant.replaceregexp(match:'^#.*', replace:'', flags:'g', byline:true) {
      fileset(dir: project.projectDir, includes: '.settings/org.eclipse.jdt.core.prefs')
   }
}
task sortEclipseSettingsFile << {
   new File(project.projectDir, '.settings/org.eclipse.jdt.core.prefs').with { it.text = it.readLines().findAll { it }.sort().join('\n') }
}
eclipseJdt.finalizedBy adjustEclipseSettingsFile
eclipseJdt.finalizedBy sortEclipseSettingsFile

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

test {
    systemProperties = System.properties

	// show standard out and standard error of the test JVM(s) on the console
	testLogging.showStandardStreams = true
}

jacoco {
    toolVersion = '0.7.5.201505241946'
}

/*task createZip(type: Zip) {
    from '.'
    excludes = ['bin', 'build', '.gradle', '20*', 'Moves.txt', 'Splits.json', '.classpath', '.svn']
}*/

task refreshStats(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath

	main = mainClassName 
}

import org.apache.tools.ant.taskdefs.condition.Os
task createChart(type: Exec) {
	if(Os.isFamily(Os.FAMILY_WINDOWS)) {
		executable 'C:/cygwin/bin/bash.exe' 
		args '-c', '/bin/R --no-save -f chart.R'
	} else {
		executable 'R' 
		args '--no-save', '-f', 'chart.R'
	}
}

createChart.mustRunAfter refreshStats

task refresh() {
   dependsOn classes, refreshStats, createChart
}
